name: 'Release'
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
    steps:
      - name: Print environment variables
        run: |
          echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
          echo "GITHUB_REF_TYPE=$GITHUB_REF_TYPE"
      - name: Is not a tag
        if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
        shell: bash
        run: exit 1
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const linkBase = `https://github.com/mega-manipulator/mega-manipulator-standalone/releases/download/${process.env.GITHUB_REF_NAME}/mega-manipulator_${process.env.GITHUB_REF_NAME.substring(1)}`;
            const { data: { body: releaseBody } } = await github.request('POST /repos/{owner}/{repo}/releases/generate-notes', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `${process.env.GITHUB_REF_NAME}`
            })
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `${process.env.GITHUB_REF_NAME}`,
              name: `Desktop App ${process.env.GITHUB_REF_NAME}`,
              body: `# Desktop App ${process.env.GITHUB_REF_NAME}
            
            ${releaseBody}
            
            ## Download Links
            
            Take a look at the assets to download and install this app.
            
            [Mac](${linkBase}_x64.dmg)
            [Windows](${linkBase}_x64_en-US.msi)
            [Linux](${linkBase}_amd64.deb)
            `,
              draft: true,
              prerelease: false
            })
            return data.id
  build-tauri:
    needs:
      - create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: mega-manipulator/tauri-setup-action@main
      - uses: tauri-apps/tauri-action@v0
        env:
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    runs-on: ubuntu-latest
    needs:
      - create-release
      - build-tauri
    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
